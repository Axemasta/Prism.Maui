name: Build Prism.Maui

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build Prism.Maui
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Configure and Restore Packages
        run: |
          $authToken = $env:SponsorConnectToken
          if([string]::IsNullOrEmpty($authToken))
          {
            Write-Error "No Auth Token is available"
          }

          Write-Host "Downloading Nuget.exe ..."
          Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile nuget.exe

          Write-Host "Setting Feed credentials for Sponsor Connect"
          nuget sources update -Name SponsorConnect -Username dansiegel -Password $authToken -ConfigFile nuget.config -ValidAuthenticationTypes basic
          nuget restore src\Prism.Maui\Prism.Maui.csproj
          nuget restore src\Prism.DryIoc.Maui\Prism.DryIoc.Maui.csproj
        shell: powershell
        env:
          SponsorConnectToken: ${{ secrets.SPONSOR_CONNECT_TOKEN }}

      - name: Build Packages
        run: dotnet build build.slnf -c Release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: NuGet
          path: Artifacts/

      - name: NuGet Publish (In-House)
        uses: dansiegel/publish-nuget@v1.01
        with:
            filename: 'Artifacts/*.nupkg'
            feedUrl: ${{ secrets.IN_HOUSE_NUGET_FEED }}
            apiKey: ${{ secrets.IN_HOUSE_API_KEY }}

      - name: NuGet Publish (Sponsor Connect)
        uses: dansiegel/publish-nuget@v1.01
        with:
            filename: 'Artifacts/*.nupkg'
            feedUrl: ${{ secrets.SPONSOR_CONNECT_NUGET_FEED }}
            apiKey: ${{ secrets.SPONSOR_CONNECT_TOKEN }}